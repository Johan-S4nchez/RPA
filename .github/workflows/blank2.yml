name: Deploy Bot Automation

on:
  push:
    branches:
      - main  # Aquí puedes definir la rama donde quieres que se ejecute el workflow
  pull_request:
    branches:
      - main  # También puedes definir otras condiciones de disparo, como pull requests

jobs:
  deploy:
    runs-on: ubuntu-latest  # Puedes elegir el entorno según tus necesidades

    steps:
      - name: Checkout código
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'  # Especifica la versión de Python que necesitas

      - name: Instalar requests module
        run: python -m pip install requests  # Instala el módulo 'requests'

      - name: Ejecutar script Python para despliegue de bot
        run: |
          python - <<EOF
          import requests
          import json

          url = "https://community.cloud.automationanywhere.digital/v3/automations/deploy"

          payload = json.dumps({
            "fileId": 13323077,
            "automationName": "Prueba_Bot_API_01",
            "runAsUserIds": [
              639618
            ],
            "botInput": {
              "sInputFirstName": {
                "type": "STRING",
                "string": "Cesar"
              },
              "sInputCompanyname": {
                "type": "STRING",
                "string": "MONEX"
              },
              "sInputEmail": {
                "type": "STRING",
                "string": "cesar@monex.com"
              },
              "sInputPhoneNumber": {
                "type": "STRING",
                "string": "556984125"
              },
              "sInputUsername": {
                "type": "STRING",
                "string": "testapimonex3"
              },
              "sInputPassword": {
                "type": "STRING",
                "string": "contra1234"
              }
            }
          })

          headers = {
            'X-Authorization': 'eyJhbGciOiJSUzUxMiJ9.eyJzdWIiOiI2Mzk2MTgiLCJjbGllbnRUeXBlIjoiV0VCIiwidGVuYW50VXVpZCI6IjRiNzQxZjQ5LTJkMmItNGE3Yy05ZmM0LThlNjMwZWIyMTYxMyIsIm11bHRpcGxlTG9naW4iOmZhbHNlLCJpYXQiOjE3MjE3MDQ1NTUsImV4cCI6MTcyMTcwNTc1NSwiaXNzIjoiQXV0b21hdGlvbkFueXdoZXJlIiwibmFub1RpbWUiOjE1NTYwODgzMDQ2NjQ4MDF9.sYFgMC8IjjbP3xCXmZ_2PiJXUvFM7p0ifrVcZU1HojfSW0xuD6Xr0Ky9S82cUY5fF44Z32RY4Yal4c1_J-KaDr7DmQ6O6IRpBc-r3VjYMUIJSh0a9hpNDBJuQwak4GXTj602OAvzGGr2Lzt52WwEfEQlw2ubgmYcYX58-qdftKsVWEAmuZo0vpGuW7mmB5UngpA-Vrb5XhwSzwamWwKoXCU8pqgey1kCfLkaKpeKGTd_AhBxYXrmEWayn-rGfc-DDHtdY1HFmxRab1adsCwmkHv7KxlPCdFODHHILFi4E-RIKl82q6S4dQ9Q4I72FBXjCa6js0d74SY8milp4FMcww',
            'Content-Type': 'application/json'
          }

          response = requests.post(url, headers=headers, data=payload)

          print(response.text)
          EOF
