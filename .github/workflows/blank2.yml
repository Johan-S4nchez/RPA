name: Deploy Bot Automation

on:
  push:
    branches:
      - main  # Aquí puedes definir la rama donde quieres que se ejecute el workflow
  pull_request:
    branches:
      - main  # También puedes definir otras condiciones de disparo, como pull requests

jobs:
  deploy:
    runs-on: ubuntu-latest  # Puedes elegir el entorno según tus necesidades

    steps:
      - name: Checkout código
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'  # Especifica la versión de Python que necesitas

      - name: Instalar requests module
        run: python -m pip install requests  # Instala el módulo 'requests'

      - name: Ejecutar script Python para despliegue de bot
        run: |
          python - <<EOF
          import requests
          import json

          url = "https://community.cloud.automationanywhere.digital/v3/automations/deploy"

          payload = json.dumps({
            "fileId": 13323077,
            "automationName": "Prueba_Bot_API_01",
            "runAsUserIds": [
              639618
            ],
            "botInput": {
              "sInputFirstName": {
                "type": "STRING",
                "string": "Johan"
              },
              "sInputCompanyname": {
                "type": "STRING",
                "string": "MONEX"
              },
              "sInputEmail": {
                "type": "STRING",
                "string": "johan@monex.com"
              },
              "sInputPhoneNumber": {
                "type": "STRING",
                "string": "556984125"
              },
              "sInputUsername": {
                "type": "STRING",
                "string": "testapimonex2"
              },
              "sInputPassword": {
                "type": "STRING",
                "string": "contra1234"
              }
            }
          })

          headers = {
            'X-Authorization': 'eyJhbGciOiJSUzUxMiJ9.eyJzdWIiOiI2Mzk2MTgiLCJjbGllbnRUeXBlIjoiV0VCIiwidGVuYW50VXVpZCI6IjRiNzQxZjQ5LTJkMmItNGE3Yy05ZmM0LThlNjMwZWIyMTYxMyIsIm11bHRpcGxlTG9naW4iOmZhbHNlLCJpYXQiOjE3MjE3MDI2MDIsImV4cCI6MTcyMTcwMzgwMiwiaXNzIjoiQXV0b21hdGlvbkFueXdoZXJlIiwibmFub1RpbWUiOjE1NTQxMzA2MzQ3NTEwMjB9.GCuy_O2_jkopnui_BjXdtCv6YeqFUERYd5BIOlM5eC-sVnjfRoberlQ0jCM9qPTjGwnVYGdlD9KSdmbY2Uct7IvYowccXzOQyCq03Mc_v14t5e7Oz4YVx3udFJdf7Ul1iFuBb1VIOpOwftmn8qyWW4coshJ0NU-hoa4GimPy5N1s93x8q_zisZWoFY7e3T4AJjt3j-8utDuSkyRV4v1zWm8LZ__wUgXWsUrt1BD9egN5U1ksF27fViUNYVrR7Gbv2S7ssGYn9yfdIsp7UzwKCFCKQDzF41G1JeocFH7NOx5T3tF-qN9RjEPsDHQV2VcLwp_Ahf4TjA1HBn1Yba6Vnw',
            'Content-Type': 'application/json'
          }

          response = requests.post(url, headers=headers, data=payload)

          print(response.text)
          EOF
